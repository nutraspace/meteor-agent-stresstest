#!/bin/bash

# Email / Account creation

WORDLINE=$((($RANDOM * $RANDOM) % $(wc -w /usr/share/dict/words | awk '{print $1}')))"p" && sed -n $WORDLINE /usr/share/dict/words > $var1

OUTPUT="$(cat $var1)"
email='@healthagent.com'
echo > accounts
printf "How many emails/accounts do you want to create?\n"
read n
touch countemail
for ((i=1; i<=n; i++)) {
printf "${OUTPUT}%d$email\n" $i >> accounts
}
printf "\n"

# Beginning start.sh

# read options
while getopts ":u:p:" opt; do
  case $opt in
    u)
      echo "URL set to $OPTARG" >&2
      url="$OPTARG"
      ;;
    p)
      echo "PASSWORD set to $OPTARG" >&2
      password="$OPTARG"
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done
#### should I remove the first -o?
if [ -o -z "$url" -o -z "$password" ]; then
    echo "Usage: ./start.sh -u <HTTP://URL> -p <PASSWORD>"
    exit
fi

# populate Drones
declare -a Drones=()
while read line; do Drones=("${Drones[@]}" "$line"); done < drones

# copy all files to the Drones
for i in "${Drones[@]}"
do
   echo -e "$i"
   ssh -t $i hostname
   scp healthagent_signup_to_logout.js $i:/root/healthagent_signup_to_logout.js
   scp healthagent_immortalCasper.sh $i:/root/healthagent_immortalCasper.sh
   ssh -t $i find / | grep healthagent_immortalCasper.sh
   scp accounts $i:/root
   ssh -t $i chmod +x /root/healthagent_immortalCasper.sh
   ssh -t $i ls -ltrha /root/healthagent_immortalCasper.sh
done

# run casper in all drones
for i in "${Drones[@]}"
do
   ssh $i "nohup /root/healthagent_immortalCasper.sh -u $url -p $password > /dev/null 2>&1 & "
   echo Started the immortal Casper on $i
done

# End of start.sh

# Pulling status information
sleep 4

# populate Drones
declare -a Drones=()
while read line; do Drones=("${Drones[@]}" "$line"); done < drones

# How Many Caspers instances
for i in "${Drones[@]}"
do
   echo "Show Immortal Casper(s) are running on $i"
   ssh $i "pid=\$(ps aux | grep 'healthagent_immortalCasper.sh' | grep -v grep | wc -l); echo \$pid"
   echo "#####################"
   echo "Show how many Casper(s) are running on $i"   
   ssh $i "pid=\$(ps aux | grep 'casperjs' | grep 'email' | grep -v grep | wc -l); echo \$pid"
   ssh $i "pid=\$(ps aux | grep 'casperjs' | grep 'email' | awk '{print \$16}'| grep -v grep); echo  \$pid"
   echo "#####END#####"
done
